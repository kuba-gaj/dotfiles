# See https://wiki.hyprland.org/Configuring/Monitors/

# Environment variables https://wiki.hyprland.org/Configuring/Environment-variables/
# Hyprland Environment Variables
# env = HYPRLAND_LOG_WLR,1 # Enables more verbose logging of wlroots.
# env = HYPRLAND_NO_RT,1  # Disables realtime priority setting by Hyprland.
# env = HYPRLAND_NO_SD_NOTIFY,1 # If systemd, disables the sd_notify calls.

# Toolkit Backend Variables
env = GDK_BACKEND,wayland,x11,* # GTK: Use wayland if available. If not: try x11, then any other GDK backend.
env = QT_QPA_PLATFORM,wayland;xcb # Qt: Use wayland if available, fall back to x11 if not.
env = SDL_VIDEODRIVER,wayland # Run SDL2 applications on Wayland. Remove or set to x11 if games that provide older versions of SDL cause compatibility issues
env = CLUTTER_BACKEND,wayland # Clutter package already has wayland enabled, this variable will force Clutter applications to try and use the Wayland backend

# XDG Specifications
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland

# Qt Variables
env = QT_AUTO_SCREEN_SCALE_FACTOR,1 # (From the Qt documentation) enables automatic scaling, based on the monitor’s pixel density
env = QT_QPA_PLATFORM,wayland;xcb # Tell Qt applications to use the Wayland backend, and fall back to x11 if Wayland is unavailable
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1 # Disables window decorations on Qt applications
env = QT_QPA_PLATFORMTHEME,qt5ct # Tells Qt based applications to pick your theme from qt5ct, use with Kvantum.

# Theming Related Variables
# env = GTK_THEME,Gruvbox-Dark-B # Set a GTK theme manually, for those who want to avoid appearance tools such as lxappearance or nwg-look
# env = GTK_THEME,catppuccin-mocha-blue-standard+default # Set a GTK theme manually, for those who want to avoid appearance tools such as lxappearance or nwg-look
env = XCURSOR_SIZE,24 # Set cursor size. See here for why you might want this variable set.
# env = XCURSOR_THEME, # Set your cursor theme. The theme needs to be installed and readable by your user.

# APPS
env = MOZ_ENABLE_WAYLAND,1
env = MOZ_DBUS_REMOTE,1

# monitor=name,resolution,position,scale
# hyprctl monitors all
# monitor=,preferred,auto,auto
# monitor=eDP-1, 2256x1504, auto, 2
monitor=eDP-1, 2256x1504, auto, 1.566667
# monitor=eDP-1, 2256x1504, auto, 1.175000
# monitor=DP-2, 3840x2160, 0x0, 1.5
monitor=DP-2, 1920x1080, 0x0, 1
monitor=DP-3, 5120x1440, 0x0, 1
# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# Execute your favorite apps at launch
# exec-once = waybar & hyprpaper & firefox
# todo: kanshi?
# make sure that xdg-desktop-portal-hyprland can get the required variables on startup
# exec-once=dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once=dbus-update-activation-environment --all; systemctl --user start hyprland-session.target
# exec-once=systemctl --user start hyprland-session.target
# exec-once=systemctl --user start hyprland-session.target
# exec-once=kanshi
exec-once=hyprpaper
exec-once=hypr-events
exec-once=tmux new -A -d -s main
# exec-once=mako
# Notification Daemon
exec-once=swaync
# Toggle control center
exec-once=udiskie
# todo: separate config from sway?
# exec-once=waybar
# that was needed on sway to fix blueman-applet not opening manager on click
#exec-once dbus-update-activation-environment DISPLAY
# exec-once=blueman-applet
# wait for network to be up before starting scratchpad apps and firefox
# exec-once=nm-online
# to debug:
# exec-once=nm-online && pypr
exec-once=nm-online && pypr --debug /dev/null > /tmp/pypr_launch_log.txt 2>&1
exec-once=nm-online && firefox
# kitty should wait for tmux to start
exec-once=sleep 2 && kitty --class term-dotfiles tmux attach -d -t dotfiles
windowrule=workspace 2 silent, ^(term-dotfiles)
exec-once=sleep 2 && kitty --class term-trint tmux attach -d -t work
windowrule=workspace 3 silent, ^(term-trint)
exec-once=sleep 2 && kitty --class term-learning tmux attach -d -t learn
windowrule=workspace 9 silent, ^(term-learning)

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf
source = ~/.config/hypr/themes/mocha.conf

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1

    touchpad {
        natural_scroll = yes
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 2
    gaps_out = 4
    border_size = 2
    col.active_border = $lavender
    col.inactive_border = $overlay0
    # col.active_border = rgba($lavender)
    # col.inactive_border = rgba($overlay0)
    # col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    # col.inactive_border = rgba(595959aa)

    # layout = dwindle
    layout = master
  # cursor_inactive_timeout = 5000
}

misc {
  enable_swallow = true
  swallow_regex = "^(kitty)$"
  # swallow_regex = "kitty"
  # swallow_regex = "^(term-.*)"
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 5

    blur {
        enabled = true
        size = 3
        passes = 1
    }

    drop_shadow = yes
    shadow_range = 4
    shadow_render_power = 3
    # col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = yes

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
}

master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_is_master = false
    orientation = center
    always_center_master = true
    no_gaps_when_only = 2
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = off
}

# Example per-device config
# See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
# device:epic-mouse-v1 {
#     sensitivity = -0.5
# }

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# Example windowrule v1
# windowrule = float, ^(kitty)$
# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$
#
# float and pin google meet (wavebox)
windowrule = float, ^(wavebox-kjgfgldnnfoeklkmfkjfagphfepbbdan-Default)$
windowrule = pin, ^(wavebox-kjgfgldnnfoeklkmfkjfagphfepbbdan-Default)$
# floating rules required for PWA apps in scratchpad
# yt music
# windowrule = float, ^(chrome-cinhimbnkkaeohfgghhklpknlkffjgod-Default)$
# amplenote
# windowrule = float, ^(chrome-pfphgelppkenhllngngioolkaeelhlmi-Default)$

# todo: move as floating to current workspace
windowrulev2 = float,title:^(Sign in – Google accounts - Wavebox)$
windowrulev2 = movetoworkspace 2, title:^(Sign in – Google accounts - Wavebox)$

# zoom rules
# # For pop up notification windows that don't use notifications api
# for_window [app_id="zoom" title="^zoom$"] border none, floating enable
windowrule = float, ^(zoom)$
# first window after login: title: Zoom - Licensed Account

# windowrulev2 = float, class:^(zoom)$, title:^(zoom)$
# For specific Zoom window
# windowrulev2 = float, class:^(zoom)$,, title:^(Zoom|About)$
# for_window [app_id="zoom" title="^(Zoom|About)$"] border pixel, floating enable
# windowrulev2 = float, class:^(zoom)$, title:^(Settings)$
# windowrulev2 = float, class:^(zoom)$, title:Zoom Meeting(.*)?
# for_window [app_id="zoom" title="Zoom Meeting(.*)?"] workspace next_on_output --create, move container to workspace current, floating disable, inhibit_idle open
# Switches, see https://wiki.hyprland.org/Configuring/Binds/#switches
bindl=,switch:off:Lid Switch,exec,hyprctl keyword monitor "eDP-1, 2256x1504, auto, 1.25"
bindl=,switch:on:Lid Switch,exec,hyprctl keyword monitor "eDP-1, disable"
# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER
$altMod = ALT

# Binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
# bind = $altMod, apostrophe, exec, kitty
bind = $altMod CTRL, L, exec, hypr-toggle-layout

bind = $mainMod, apostrophe, exec, kitty
bind = $mainMod SHIFT, apostrophe, exec, firefox
bind = $mainMod, backspace, exec, pypr toggle slack
bind = $mainMod SHIFT, backspace, exec, pypr toggle whatsapp
bind = $mainMod, C, exec, pypr toggle chatbox
# use launcher for that?
# bind = $mainMod SHIFT, C, exec, env APPIMAGELAUNCHER_DISABLE=TRUE /opt/Chatbox/Chatbox-1.2.0-x86_64.AppImage --no-sandbox
bind = $mainMod, D, exec, rofi -combi-modi drun,run -show combi -show-icons
bind = $mainMod, delete, exec, pypr toggle obsidian
bind = $mainMod SHIFT, delete, exec, pypr toggle discord
bind = $mainMod, E, exec, thunar
bind = $mainMod, F, fullscreen, 1
bind = $mainMod CTRL, L, exec, swaylock --screenshots --fade-in 0.2 --effect-blur 7x5 --effect-vignette 0.5:0.5 --indicator --indicator-radius 100 --indicator-thickness 7 --clock --grace 3
bind = $mainMod, I, exec, pypr toggle top
bind = $mainMod, M, exec, pypr toggle ytmusic
bind = $mainMod SHIFT, M, exec, pypr toggle gmeet
bind = $mainMod, N, exec, swaync-client -t -sw
bind = $mainMod, SPACE, togglefloating
bind = $mainMod, O, exec, pypr toggle onepass
bind = $mainMod, Q, exec, wlogout
bind = $mainMod SHIFT, Q, killactive
bind = $mainMod, return, exec, pypr toggle dropterm
bind = $mainMod, S, exec, grim -g "$(slurp)" - | swappy -f -
bind = $mainMod SHIFT, S, exec, kooha
bind = $mainMod, X, movewindow, mon:+1
bind = $mainMod SHIFT, X, movecurrentworkspacetomonitor, +1
bind = $mainMod, TAB, workspace, previous
# bind = $mainMod SHIFT, X, exec, pypr shift_monitors +1
# todo: toggle floating focus
# Submaps
# will switch to a submap called resize
bind=$mainMod,R,submap,resize
submap=resize
binde=,l,resizeactive,10 0
binde=,h,resizeactive,-10 0
binde=,k,resizeactive,0 -10
binde=,j,resizeactive,0 10
bind=,escape,submap,reset
submap=reset

# fn keys with swayosd
# Sink volume raise optionally with --device
exec-once = swayosd-server
bind = ,XF86AudioRaiseVolume, exec, swayosd-client --output-volume raise
# Sink volume lower optionally with --device
bind = ,XF86AudioLowerVolume, exec, swayosd-client --output-volume lower
# Sink volume toggle mute
bind = ,XF86AudioMute, exec, swayosd-client --output-volume mute-toggle
# Source volume toggle mute
bind = ,XF86AudioMicMute, exec, swayosd-client --input-volume mute-toggle

# Capslock (If you don't want to use the backend)
bind = ,Caps_Lock, exec, swayosd-client --caps-lock
# bindsym --release Caps_Lock exec swayosd-client --caps-lock
# Capslock but specific LED name (/sys/class/leds/)
# bindsym --release Caps_Lock exec swayosd-client --caps-lock-led input19::capslock

# Brightness raise
bind = ,XF86MonBrightnessUp, exec, swayosd-client --brightness raise
# Brightness lower
bind = ,XF86MonBrightnessDown, exec, swayosd-client --brightness lower
# todo: some osd for that?
# Media player controls
bind = ,XF86AudioPlay, exec, playerctl play-pause
bind = ,XF86AudioPause, exec, playerctl play-pause
bind = ,XF86AudioNext, exec, playerctl next
bind = ,XF86AudioPrev, exec, playerctl previous

# Brightness raise with custom value
# bindsym XF86MonBrightnessUp  exec swayosd-client --brightness 10
# Brightness lower with custom value
# bindsym XF86MonBrightnessDown exec swayosd-client --brightness -10
#
# todo: display legend if possible or replace with another tool?
# bind=$mainMod,Q,submap,system
# submap=system
# binde=,s,exec,systemctl suspend
# binde=,h,exec,systemctl hibernate
# binde=,r,exec,systemctl reboot
# binde=,e,exit
# binde=SHIFT,s,exec,systemCtl poweroff -1
# bind=,escape,submap,reset
# submap=reset


bind = $mainMod, A, exec, pypr toggle volume
# bind = $mainMod, M, exit,
# bind = $mainMod, E, exec, dolphin
# bind = $mainMod, V, togglefloating,
# bind = $mainMod, R, exec, wofi --show drun
# bind = $mainMod, P, pseudo, # dwindle
# bind = $mainMod, J, togglesplit, # dwindle


# Move focus with mainMod + arrow keys
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Move windows
bind = $mainMod SHIFT, H, movewindow, l
bind = $mainMod SHIFT, L, movewindow, r
bind = $mainMod SHIFT, K, movewindow, u
bind = $mainMod SHIFT, J, movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# open hyprswitch
bind = $mainMod, TAB, exec, hyprswitch --daemon --hide-special-workspaces false # --filter-same-class
# close hyprswitch
bindr=$modifier SHIFT, TAB, exec, hyprswitch --stop-daemon
# if it somehow doesn't close on releasing $switch_release, escape can kill
bindrn=,escape, exec, pkill hyprswitch

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10
bind = $mainMod SHIFT, o, movetoworkspace, special

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

